str: ""

# main in Test
_ic_main:
#INT i = 1
Move 1, R2
Move R2, i
#INT j = i + 5
Move i, R2
Move R2, R3
Move 5, R2
Add R3, R2
Move R2, j
#j = 500
Move 500, R2
Move R2, j
#BOOLEAN d = false
Move 0, R2
Move R2, d
#while
_Label_while_body_11:
#LNEG d
Move d, R2
Move R2, R3
Move 1, R2
Xor R3, R2
Compare 1, R2
JumpFalse _Label_while_end_11
#Statement block line 12
#j = j - 100
Move j, R2
Move R2, R3
Move 100, R2
Sub R2, R3
Move R3, R2
Move R2, j
#if
#j % 3 == 0
Move j, R2
Move R2, R5
Move 3, R2
Mod R2, R5
Move R5, R2
Move R2, R3
Move 0, R2
Move 0, R4
Compare R3, R2
JumpFalse _Label_less_equal_14
Move 1, R4
_Label_less_equal_14:
Move R4, R2
Compare 1, R2
JumpFalse _Label_else_14
#Statement block line 15
#break
Jump _Label_while_end_11
JumpFalse _Label_end_if_14
#else: if
_Label_else_14:
#Statement block line 19
#j = j
Move j, R2
Move R2, j
JumpFalse _Label_end_if_14
_Label_end_if_14:
#if
#j % 80 == 0
Move j, R2
Move R2, R5
Move 80, R2
Mod R2, R5
Move R5, R2
Move R2, R3
Move 0, R2
Move 0, R4
Compare R3, R2
JumpFalse _Label_less_equal_23
Move 1, R4
_Label_less_equal_23:
Move R4, R2
Compare 1, R2
JumpFalse _Label_end_if_23
#Statement block line 24
#continue
Jump _Label_while_body_11
JumpFalse _Label_end_if_23
_Label_end_if_23:
#j = j + 30
Move j, R2
Move R2, R3
Move 30, R2
Add R3, R2
Move R2, j
#INT[]x1 h = new INT[]x1[4]
Move 4, R2
Mul 4, R2
Library __allocateArray(R2), R3
Move R3, R2
Move R2, h
#INT k = h[2]
Move h, R2
Move R2, R3
Move 2, R2
MoveArray R3[R2], R4
Move R4, R2
Move R2, k
#INT l = h.length
Move h, R2
Move R2, R3
ArrayLength R3, R2
Move R2, l
#if
#l < 4
Move l, R2
Move R2, R3
Move 4, R2
Move 0, R4

Library __printi(R3), Rdummy
Library __println(str), Rdummy


Library __printi(R2), Rdummy
Library __println(str), Rdummy

Compare R3, R2
JumpLE _Label_less_34
Move 1, R4
_Label_less_34:
Move R4, R2
Compare 1, R2
JumpFalse _Label_end_if_34
#Statement block line 35
#break
Jump _Label_while_end_11
JumpFalse _Label_end_if_34
_Label_end_if_34:
#d = true
Move 1, R2
Move R2, d
Jump _Label_while_body_11
_Label_while_end_11:
# Call printi(j)
# evaluate arg 0
Move j, R2
Move R2, R4000
Library __printi(R4000), Rdummy
Library __exit(0),R0
Return 9999
